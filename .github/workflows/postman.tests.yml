name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Build Stage
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install Dependencies
        run: |
          cd server
          npm install

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: server/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('server/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

  # Test Stage
  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mvertes/alpine-mongo:latest
        ports:
          - 27017:27017
    env:
      MONGODB_URI: "mongodb://localhost:27017/serverTestDB"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Restore Cached Node Modules
        uses: actions/cache@v3
        with:
          path: server/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('server/package-lock.json') }}

      - name: Run Tests
        run: |
          cd server
          npm run ci-test

  # Deploy Stage
  deploy:
    name: Deploy to Heroku
    needs: test
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://${{ secrets.HEROKU_APP_NAME }}.herokuapp.com

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: Deploy to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          git remote add heroku https://git.heroku.com/${{ secrets.HEROKU_APP_NAME }}.git
          git push heroku main
