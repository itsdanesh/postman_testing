name: Build and Test

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Step 3: Cache dependencies
      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: server/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules

      # Step 4: Install dependencies
      - name: Install Dependencies
        working-directory: server
        run: npm install

      # Step 5: Rebuild native modules (if necessary)
      - name: Rebuild Native Modules
        working-directory: server
        run: npm rebuild bcrypt || echo "Rebuild not required"

  test:
    runs-on: ubuntu-latest
    needs: build

    env:
      MONGODB_URI: mongodb://127.0.0.1:27017/serverTestDB

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017

    steps:
      # Step 1: Check out the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Use cached dependencies
      - name: Restore Cached Node Modules
        uses: actions/cache@v3
        with:
          path: server/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules

      # Step 3: Install dependencies (if cache is not restored)
      - name: Install Dependencies
        working-directory: server
        run: npm install

      # Step 4: Run tests
      - name: Run Tests
        working-directory: server
        run: npm run ci-test
